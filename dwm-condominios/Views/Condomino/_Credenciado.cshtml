@using DWM.Models.Repositories
@using App_Dominio.Repositories
@model CondominoEditViewModel
@{
    Layout = null;
    TransacaoRepository[] t = { new TransacaoRepository(), new TransacaoRepository() };
    t[0].url = "#";
    t[0].nomeCurto = "Incluir";
    t[0].referencia = "ins(" + Model.CredenciadoViewModel.CondominoID + ")";
    t[0].exibir = "S";

    t[1].url = "../Home/Default";

    TransacaoRepository[] t1 = { new TransacaoRepository(), new TransacaoRepository() };
    t1[0].url = "../Condomino/Browse";
    t1[0].nomeCurto = "Residente";
    t1[0].referencia = "";
    t1[0].exibir = "N";

    t1[1].url = "../Home/Default";
}

@if (Model != null)
{
    if (Model.Credenciados.Count() > 0)
    {
        <div class="x_panel hidden-xs">
            @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Lista de Dependentes", Descricao = "", Transacao = t })
            <div class="x_content">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>E-mail</th>
                            <th>Tipo</th>
                            <th class="text-center">Visitante Perm</th>
                            <th>Ação</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int contador = 0;
                            foreach (CredenciadoViewModel cre in Model.Credenciados)
                            {
                                <tr>
                                    @Html.Hidden("obs" + contador.ToString(), cre.Observacao)
                                    <td><small>@cre.Nome</small></td>
                                    <td><small>@cre.Email</small></td>
                                    <td><small>@cre.DescricaoTipoCredenciado</small></td>
                                    <td class="text-center">@(cre.IndVisitantePermanente == "S" ? "SIM" : "NÃO")</td>
                                    <th scope="row">
                                        <a href="#" title="Editar" onclick="edit('@cre.CondominoID', '@cre.CredenciadoID', '@cre.UsuarioID', '@cre.Nome', '@cre.Email', '@cre.TipoCredenciadoID', '@cre.Sexo', '@contador')"><i class="fa fa-edit"></i></a>
                                        <a href="#" title="Excluir" onclick="del('@cre.CondominoID', '@cre.CredenciadoID', '@cre.UsuarioID', '@cre.Nome', '@cre.Email', '@cre.TipoCredenciadoID', '@cre.Sexo', '@contador')"><i class="fa fa-trash"></i></a>
                                    </th>
                                </tr>
                                contador++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Mobile -->
        <div class="x_panel hidden-lg hidden-md hidden-sm">
            @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Dependentes", Descricao = "", Transacao = t })
            <div class="x_content">
                <table class="table table-striped">
                    <tbody>
                        @{
                            int contadorD = 0;
                            foreach (CredenciadoViewModel cre in Model.Credenciados)
                            {
                                <tr>
                                    @Html.Hidden("obs" + contador.ToString(), cre.Observacao)
                                    <td>
                                        @cre.Nome
                                        <small class="pull-right">@cre.DescricaoTipoCredenciado</small>
                                        <small>@cre.Email</small>
                                        @if(cre.IndVisitantePermanente == "S")
                                        {
                                            <p class="text-prateado">Visitante Permanente</p>
                                        }
                                        <p>&nbsp;</p>
                                        <a href="#dep" title="Editar" onclick="edit('@cre.CondominoID', '@cre.CredenciadoID', '@cre.UsuarioID', '@cre.Nome', '@cre.Email', '@cre.TipoCredenciadoID', '@cre.Sexo', '@contador')"><i class="fa fa-2x fa-edit"></i></a>
                                        <a href="#dep" title="Excluir" onclick="del('@cre.CondominoID', '@cre.CredenciadoID', '@cre.UsuarioID', '@cre.Nome', '@cre.Email', '@cre.TipoCredenciadoID', '@cre.Sexo', '@contador')"><i class="fa fa-2x fa-trash"></i></a>
                                    </td>
                                </tr>
                                contadorD++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    <div class="x_panel" id="dep">
        @Html.EditorFor(info => Model, "FORMULARIO", new { Brand = "Dependente", Descricao = "", Transacao = t1 })
        <div class="x_content">
            @using (Ajax.BeginForm("EditCredenciado", "Condomino", new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "div-credenciado" }, new { @class = "form", @id = "form002", @name = "form002" }))
            {
                @Html.Partial("_alerts")
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                @Html.HiddenFor(info => info.CredenciadoViewModel.CondominoID)
                @Html.HiddenFor(info => info.CredenciadoViewModel.CredenciadoID)
                @Html.HiddenFor(info => info.CredenciadoViewModel.UsuarioID)
                @Html.Hidden("Operacao", "S")
                <div class="row">
                    <div class="col-md-6 col-xs-12 col-sm-12 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.Nome, new { @class = "control-label" })
                            <input type="text" class="form-control" name="CredenciadoViewModel.Nome" id="CredenciadoViewModel_Nome" value="@Model.CredenciadoViewModel.Nome" maxlength="30" />
                        </div>
                    </div>
                    <div class="col-md-6 col-xs-12 col-sm-12 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.Email, new { @class = "control-label" })
                            <input type="text" class="form-control" name="CredenciadoViewModel.Email" id="CredenciadoViewModel_Email" value="@Model.CredenciadoViewModel.Email" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-xs-12 col-sm-12 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.TipoCredenciadoID, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.CredenciadoViewModel.TipoCredenciadoID, new DWM.Models.Enumeracoes.BindDropDownList().TipoCredenciados("", Model.CredenciadoViewModel.TipoCredenciadoID.ToString()), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3 col-xs-12 col-sm-12 col-lg-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.Sexo, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.CredenciadoViewModel.Sexo, App_Dominio.Enumeracoes.DropDownListEnum.Sexo(Model.CredenciadoViewModel.Sexo, ""), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3 col-xs-12 col-sm-12 col-lg-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.IndVisitantePermanente, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.CredenciadoViewModel.IndVisitantePermanente, App_Dominio.Enumeracoes.DropDownListEnum.SimNao(Model.CredenciadoViewModel.IndVisitantePermanente, ""), new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-xs-12 col-sm-12 col-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CredenciadoViewModel.Observacao, new { @class = "control-label" })
                            <textarea class="form-control" cols="0" rows="4" name="CredenciadoViewModel.Observacao" id="CredenciadoViewModel_Observacao" value="@Model.CredenciadoViewModel.Observacao"></textarea>
                        </div>
                    </div>
                </div>
                <p>&nbsp;</p>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div class="form-group">
                            <input type="submit" class="btn btn-success" value="Salvar" name="btn-salvar-credenciado" id="btn-salvar-credenciado"  onclick="$('#msg-salvando-dep').show()" />
                            <input type="button" onclick="ins(@(Model.CredenciadoViewModel.CondominoID))" class="btn btn-default" value="Cancelar" />
                            <span class="text-prateado" id="msg-salvando-dep">Salvando...</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    @Html.Partial("_AcessoNegadoModal")
}


<script type="text/javascript">
    $("#Operacao").val("S");
    $("#CredenciadoViewModel_CredenciadoID").val("0");
    $('#msg-salvando-dep').hide()

    $(function () {
        $('#form002').submit(function () {
            if ($(this).valid()) {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        $('#div-credenciado').html(result);
                    }
                });
            }
            return false;
        });
    });

    function fill(CondominoID, CredenciadoID, UsuarioID, Nome, Email, TipoCredenciadoID, Sexo, contador) {
        var obs = $("#obs" + contador).val();

        $("#CredenciadoViewModel_Nome").val(Nome);
        $("#CredenciadoViewModel_Email").val(Email);
        if (TipoCredenciadoID != '')
            $("#CredenciadoViewModel_TipoCredenciadoID").val(TipoCredenciadoID);
        $("#CredenciadoViewModel_Sexo").val(Sexo);
        $("#CredenciadoViewModel_Observacao").val(obs);
        $("#CredenciadoViewModel_UsuarioID").val(UsuarioID);
        $("#CredenciadoViewModel_CredenciadoID").val(CredenciadoID);
        $("#CredenciadoViewModel_CondominoID").val(CondominoID);
    }

    function changeBtnClass(oldClas, newClass, oper) {
        $("#Operacao").val(oper); // S-Salvar ou D-Deletar
        if (oper == 'S') {
            $('#header-credenciado').html('Alterar credenciado <small>Alteração de dados do usuário.</small>');
            $("#btn-salvar-credenciado").val("Salvar");
        }
        else if (oper == 'I') {
            $('#header-credenciado').html('Novo credenciado <small>O novo credenciado receberá um convite por e-mail para ativação da conta.</small>');
            $("#btn-salvar-credenciado").val("Salvar");
        }
        else {
            $('#header-credenciado').html('Excluir credenciado <small>Exclusão do usuário.</small>');
            $("#btn-salvar-credenciado").val("Excluir");
        }
        $("#btn-salvar-credenciado").removeClass(oldClas);
        $("#btn-salvar-credenciado").addClass(newClass);
    }

    function ins(CondominoID) {
        fill(CondominoID, '0', '0', '', '', '', 'M', '');
        changeBtnClass('btn btn-danger', 'btn btn-success', 'I');
    }

    function edit(CondominoID, CredenciadoID, UsuarioID, Nome, Email, TipoCredenciadoID, Sexo, contador) {
        fill(CondominoID, CredenciadoID, UsuarioID, Nome, Email, TipoCredenciadoID, Sexo, contador)
        changeBtnClass('btn btn-danger', 'btn btn-success', 'S')
    }

    function del(CondominoID, CredenciadoID, UsuarioID, Nome, Email, TipoCredenciadoID, Sexo, contador) {
        fill(CondominoID, CredenciadoID, UsuarioID, Nome, Email, TipoCredenciadoID, Sexo, contador)
        changeBtnClass('btn btn-success', 'btn btn-danger', 'D')
    }
</script>